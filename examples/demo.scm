;; Skeme Demo Template
;; Demonstrates variables, primitives, and output generation

(display "=== Skeme Template Demo ===")
(newline)

;; Check if variables were passed
(display "Checking for CLI variables...")
(newline)

;; Note: Variables passed with -V are automatically defined
;; For example: -V outdir=output creates (define outdir "output")

;; Create some content using our primitives
(define header (literal "# Generated by Skeme\n\n"))
(define body (make-formatting-instruction "This file was generated from a Scheme template.\n"))
(define footer (literal "\n---\nEnd of generated content\n"))

;; Combine them
(define content (sosofo-append header (sosofo-append body footer)))

(display "Created sosofos successfully!")
(newline)

;; Demonstrate our grove primitives work
(display "Testing grove primitives:")
(newline)
(display "  - literal: OK")
(newline)
(display "  - make-formatting-instruction: OK")
(newline)
(display "  - sosofo-append: OK")
(newline)
(display "  - empty-sosofo: ")
(define empty (empty-sosofo))
(display "OK")
(newline)

;; Show we can do list operations (R5RS)
(display "\nDemonstrating R5RS Scheme:")
(newline)
(define numbers (list 1 2 3 4 5))
(display "  Sum of ")
(display numbers)
(display " = ")
(display (apply + numbers))
(newline)

;; String operations
(define message (string-append "Hello" " " "from" " " "Skeme!"))
(display "  String append: ")
(display message)
(newline)

(display "\n=== Template Complete ===")
(newline)

;; Return success value
#t
